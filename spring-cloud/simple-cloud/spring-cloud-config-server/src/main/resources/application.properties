## 服务器配置
spring.application.name = spring-cloud-server-application
## 基于本地系统的服务器配置
## ${user.dir}定位项目根路径, 可以适用于不同操作系统。
## 如果不确定${user.dir},System.out.println(System.getProperty("user.dir"))
#spring.cloud.config.server.git.uri = ${user.dir}/spring-cloud-config-server/src/main/resources/config/segments
## 基于远程git的服务器配置
### 连接git的用户名(如果是私有的git, 必须要配置账号信息, 若是公开的, 不用配置)
#spring.cloud.config.server.git.username = userName
### 连接git的用户名密码
#spring.cloud.config.server.git.password = 123
### git远程仓库配置
spring.cloud.config.server.git.uri = https://github.com/Sestar/firstLearn/tree/master/spring-cloud/cloud-config-files
### 强制拉取git内容, 如果本地副本是脏数据, 将强制从远程仓库拉取配置
#spring.cloud.config.server.git.force-pull=true

## spring-boot访问配置
server.port = 3771
server.context-path = /spring-cloud-server

## Banner
banner.location = config/banner.txt

## actuator 安全性
### 开启actuator安全校验
security.basic.enabled = false
### 设置actuator账号
#security.user.name = sestar
#security.user.password = 123

## actuator鉴权
### 默认路径是 '/', 如果配置路径没有配置端口, 无法访问; 如果配置路径和端口则配置可用
management.context-path = /spring-server-actuator
### 默认端口是同server一致
management.port = 3772
### 默认开启, false则将所有鉴权关闭, 所有路径都可以访问
management.security.enabled = false
### restart Http重启服务
endpoints.restart.sensitive = false
endpoints.restart.enabled = true
### 关闭env鉴权
endpoints.env.sensitive = false