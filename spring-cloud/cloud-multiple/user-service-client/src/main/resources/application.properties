## 应用名称
spring.application.name = user-service-client-application

## 应用服务
server.port = 3721

## Actuator
management.security.enabled = false


## Ribbon
### Ribbon LoadBalancerClient 提供服务列表
#user-service-provider-application.ribbon.listOfServers = \
#  http://${provider.server.host}:${provider.server.port}


## Eureka
## Eureka开关
#eureka.client.enabled = false
### spring-eureka-server-application注册到 Eureka 服务器中
### ${}都为服务器的配置内容 http://服务器地址:${server.port}/${server.context-path}/eureka
### 如果 bootstrap 有配置 spring.cloud.config.discovery.service-id, 则需要把该配置移到 bootstrap 中
### 因为*.discovery.service-id属性是查找 Eureka 服务配置端, 而查找范围就是eureka.client.service-url.defaultZone
### 需要最先加载 Eureka 注册信息, eureka.client.service-url.defaultZone才能确定范围,
### 而 *.discovery.service-id属性配置在 bootstrap 中, 比 application 配置先加载,
### 所以当有配置Eureka服务配置端, 则需要把 eureka.client.service-url.defaultZone必须配置在 bootstrap 中
#eureka.client.serviceUrl.defaultZone = http://127.0.0.1:3701/eureka

## Feign
### 配置 user-api#IUserService接口 @FeignClient(name = "${user.service.name}") 中的占位符，实际需要制定 UserService 接口的提供方
#user.server.name = ${provider.server.application.name}
### 开启feign熔断(源码中fallback起作用), 但是测试没有通过
#feign.hystrix.enabled = true

## Service-provider.properties
#provider.server.application.name = user-service-provider-application
#provider.server.host = 127.0.0.1
#provider.server.port = 3741