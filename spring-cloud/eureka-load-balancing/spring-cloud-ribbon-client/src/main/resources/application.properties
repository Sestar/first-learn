### 通用配置
# 应用名称
spring.application.name = cloud-ribbon-client-application

# 应用服务
server.context-path = /cloud-ribbon-client
server.port = 3791

# Actuator 安全管理
management.security.enabled = false
management.context-path = /ribbon-client-actuator
management.port = 3792

# Service-provider.properties
service-provider.server.host = 127.0.0.1
service-provider.server.context-path = /cloud-server-provider
service-provider.manager.context-path = /server-provider-actuator
#service-provider.manager.context-path = /cloud-server-provider
service-provider.application.name = cloud-server-provider-application

# Ribbon
## 配置名称可以看 org.springframework.cloud.netflix.ribbon.PropertiesFactory
cloud-server-provider-application.ribbon.NFLoadBalancerRuleClassName = com.sestar.springcloudribbonclient.ribbon.MyRule
cloud-server-provider-application.ribbon.NFLoadBalancerPingClassName = com.sestar.springcloudribbonclient.ribbon.MyPing

# Banner
banner.location = config/banner.txt



### 使用ribbon.listOfServers发现服务提供端
# 使用ribbon.listOfServers服务时, 不需要开启Eureka
#eureka.client.enabled = false

# Service-provider.properties
service-provider1.port = 3871
service-provider2.port = 3872
service-provider3.port = 3873

## 配置 Ribbon 服务提供方
## listOfServers会注入到LoadBalancerInterceptor中, protocol,host,port会被解析, 但是context-path不会解析
## LoadBalancerContext#reconstructURIWithServer,可以发现只会解析 scheme(protocol), host, port
## 简单来说就是即使将ribbon.listOfServers写成
## http://${service-provider.host}:${service-provider.port}${service-provider.context-path}
## 但是最后解析只会解析成http://${service-provider.host}:${service-provider.port},不会解析${service-provider.context-path}.
## 使用ribbon.listOfServers需要LoadBalancerInterceptor实例, 这里是用启动类在注册RestTemplate时,使用@LoadBalanced创建
#cloud-server-provider-application.ribbon.listOfServers = \
#  http://${service-provider.server.host}:${service-provider1.port},\
#  http://${service-provider.server.host}:${service-provider2.port},\
#  http://${service-provider.server.host}:${service-provider3.port}



### 使用Eureka发现服务提供端
# Eureka
# eureka注册
eureka.client.serviceUrl.defaultZone = http://127.0.0.1:3781/spring-eureka-server/eureka